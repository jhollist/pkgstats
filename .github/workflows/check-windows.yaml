# https://github.com/universal-ctags/ctags/blob/master/.github/workflows/testing-msys2.yml
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: R-CMD-check-windows

jobs:

  R-CMD-check-windows:

    runs-on: windows-latest
    r: 'release'

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      fail-fast: false
      matrix:
        msystem: [MINGW32, MINGW64]

    defaults:
      run:
        shell: msys2 {0}

    if: "!(contains(github.event.head_commit.message, 'ci skip')||contains(github.event.head_commit.message, 'skip ci'))"
    steps:

      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          update: true
          install: git make automake1.16 autoconf

      - if:  matrix.msystem == 'MINGW32'
        run: pacman -S --noconfirm mingw-w64-i686-toolchain

      - if:  matrix.msystem == 'MINGW64'
        run: pacman -S --noconfirm mingw-w64-x86_64-toolchain

      - run: ln -s /usr/bin/automake-1.16 /usr/bin/automake
      - run: ln -s /usr/bin/aclocal-1.16  /usr/bin/aclocal

      - run: git config --global core.autocrlf input
        shell: bash
      - uses: actions/checkout@v2

      - name: ctags latest Windows
        run: |
          git clone https://github.com/universal-ctags/ctags.git
          cd ctags
          ./autogen.sh
          ./configure --prefix=/usr
          make V=1
          make install
          file /usr/bin/ctags
          ctags --version

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
